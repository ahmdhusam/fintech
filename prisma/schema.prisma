// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "foreignKeys"
}

model User {
  id          Int       @id @default(autoincrement())
  name        String
  username    String    @unique
  email       String    @unique
  dateOfBirth DateTime?
  role        Role      @default(USER)
  password    String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  contacts Contact[]
  accounts Account[]
}

model Contact {
  id          Int         @id @default(autoincrement())
  type        ContactType
  // TODO: MUST TO BE STATIC DATA
  countryCode String
  number      String      @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  User   User @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId Int
}

model Account {
  id       Int     @id @default(autoincrement())
  isActive Boolean @default(true)
  balance  Decimal @db.Money
  key      String  @unique @default(uuid()) @db.Uuid

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  user                 User          @relation(fields: [userId], references: [id])
  userId               Int
  sentTransactions     Transaction[] @relation("SentTransactions")
  receivedTransactions Transaction[] @relation("ReceivedTransactions")
}

model Transaction {
  id     Int               @id @default(autoincrement())
  amount Decimal           @db.Money
  type   TransactionType
  status TransactionStatus @default(Pending)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  fromAccount   Account? @relation(name: "SentTransactions", fields: [fromAccountId], references: [id], onDelete: Restrict, onUpdate: Restrict)
  toAccount     Account? @relation(name: "ReceivedTransactions", fields: [toAccountId], references: [id], onDelete: Restrict, onUpdate: Restrict)
  fromAccountId Int?
  toAccountId   Int?
}

enum Role {
  ADMIN
  USER
}

enum ContactType {
  Home
  Phone
}

enum TransactionType {
  Deposit
  Withdraw
  Transfer
}

enum TransactionStatus {
  Pending
  Transferred
  Refund
}
